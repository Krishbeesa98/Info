curl -X POST https://login.salesforce.com/services/oauth2/token \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "grant_type=password" \
  -d "client_id=YOUR_CLIENT_ID" \
  -d "client_secret=YOUR_CLIENT_SECRET" \
  -d "username=YOUR_SALESFORCE_USERNAME" \
  -d "password=YOUR_SALESFORCE_PASSWORD_AND_SECURITY_TOKEN"


#!/bin/bash

# Specify the path to the flow.xml file
FLOW_XML_PATH="path/to/flow.xml"

# Use xmllint to parse the XML and extract processor names and concurrent task count
xmllint --xpath '//processor/name/text() | //processor/scheduling[@concurrentTasks]/@concurrentTasks' "$FLOW_XML_PATH" 2>/dev/null |
awk 'NR%2{printf "%s ", $0; next;}1' |
while read -r line; do
  # Split the output into processor name and concurrent tasks
  processor_name=$(echo "$line" | awk '{print $1}')
  concurrent_tasks=$(echo "$line" | awk '{print $2}')

  # Display the processor name and the number of concurrent tasks
  echo "Processor: $processor_name, Concurrent Tasks: $concurrent_tasks"
done |
sort -k3 -n -r # Sort the results by concurrent tasks in descending order



[
  {
    "operation": "shift",
    "spec": {
      "header": "&",
      "resource": {
        "\\@type": "resource.type",
        "*": "resource.&"
      }
    }
  },
  {
    "operation": "shift",
    "spec": {
      "resource": {
        "resourceCharacteristic": {
          "*": {
            "name": {
              "latest": {
                "@(2,value)": {
                  "": {
                    "#true": "is_delete"
                  },
                  "#latest": "records[&3].rat_name"
                },
                "*": {
                  "@(2,name)": "records[&3].rat_name"
                }
              }
            },
            "value": "records[&1].rat_value",
            "\\@type": "records[&1].rat_datatype",
            "@(name)": "records[&1].rat_name",
            "@(2,type)": "records[&1].res_type",
            "@(2,subtype)": "records[&1].res_subtype",
            "@(2,drniId)": "records[&1].res_id",
            "@(3,header.activityId)": "records[&1].rat_activity_id",
            "@(3,header.timeStamp)": "records[&1].rat_activity_ts",
            "@(3,header.action)": {
              "delete": {
                "#true": "records[&2].rat_isdeleted"
              },
              "*": {
                "#false": "records[&2].rat_isdeleted"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "modify-overwrite-beta",
    "spec": {
      "records": {
        "*": {
          "rat_value": "=join(',', @(1,rat_value))",
          "rat_name": "=toUpper",
          "res_type": "=toUpper"
        }
      }
    }
  },
  {
    "operation": "modify-overwrite-beta",
    "spec": {
      "records": {
        "*": {
          "rat_value": "=toString"
        }
      }
    }
  },
  {
    "operation": "modify-default-beta",
    "spec": {
      "records": {
        "*": {
          "lastinsertdate": "${now():toNumber():plus(28800000)}"
        }
      }
    }
}
]
